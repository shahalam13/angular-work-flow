{"version":3,"sources":["./node_modules/ng2-charts/charts/charts.js","./node_modules/ng2-charts/index.js","./node_modules/ng2-charts/ng2-charts.js","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard.component.css","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/dashboard.routing.ts"],"names":[],"mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,aAAa,mBAAO,CAAC,iEAAe;AACpC,iBAAiB,mBAAO,CAAC,sDAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA,uCAAuC,+BAA+B;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA,6BAA6B,oCAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,wDAAwD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,6CAA6C,eAAe,EAAE;AAC9D,2DAA2D,uBAAuB,EAAE;AACpF,kDAAkD,eAAe,EAAE;AACnE,gEAAgE,uBAAuB,EAAE;AACzF,4DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,kDAAkD,uBAAuB,EAAE;AAC3E,2DAA2D,yBAAyB,EAAE;AACtF,uDAAuD,uBAAuB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AC5Sa;AACb;AACA;AACA;AACA,SAAS,mBAAO,CAAC,mEAAiB;;;;;;;;;;;;;ACJrB;AACb;AACA;AACA;AACA,SAAS,mBAAO,CAAC,mDAAS;;;;;;;;;;;;;ACJ1B;AAAe,27RAA43R,YAAY,kkBAAkkB,QAAQ,KAAK,QAAQ,MAAM,OAAO,QAAQ,IAAI,iWAAiW,mBAAmB,WAAW,OAAO,qrD;;;;;;;;;;;;ACA74T;AAAe,6GAA8C,2J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAGK;AAavD;IAqFE,WAAW;IACX,6DAA6D;IAC7D,sDAAsD;IACtD,iEAAiE;IACjE,KAAK;IACL,cAAc;IACd,sBAAsB;IACtB,wBAAwB;IACxB,wBAAwB;IACxB,KAAK;IAGL,4BAAoB,KAAoB,EAAS,MAAa;QAA1C,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","file":"pages-dashboard-dashboard-module.js","sourcesContent":["\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar core_1 = require(\"@angular/core\");\nvar chart_js_1 = require(\"chart.js\");\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n                if (changes['data']) {\n                    this.updateChartData(changes['data'].currentValue);\n                }\n                else {\n                    this.updateChartData(changes['datasets'].currentValue);\n                }\n                this.chart.update();\n            }\n            else {\n                // otherwise rebuild the chart\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        return new chart_js_1.Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.updateChartData = function (newDataValues) {\n        if (Array.isArray(newDataValues[0].data)) {\n            this.chart.data.datasets.forEach(function (dataset, i) {\n                dataset.data = newDataValues[i].data;\n                if (newDataValues[i].label) {\n                    dataset.label = newDataValues[i].label;\n                }\n            });\n        }\n        else {\n            this.chart.data.datasets[0].data = newDataValues;\n        }\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error,\\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    return BaseChartDirective;\n}());\nBaseChartDirective.defaultColors = [\n    [255, 99, 132],\n    [54, 162, 235],\n    [255, 206, 86],\n    [231, 233, 237],\n    [75, 192, 192],\n    [151, 187, 205],\n    [220, 220, 220],\n    [247, 70, 74],\n    [70, 191, 189],\n    [253, 180, 92],\n    [148, 159, 177],\n    [77, 83, 96]\n];\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Array)\n], BaseChartDirective.prototype, \"data\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Array)\n], BaseChartDirective.prototype, \"datasets\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Array)\n], BaseChartDirective.prototype, \"labels\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Object)\n], BaseChartDirective.prototype, \"options\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", String)\n], BaseChartDirective.prototype, \"chartType\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Array)\n], BaseChartDirective.prototype, \"colors\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], BaseChartDirective.prototype, \"legend\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], BaseChartDirective.prototype, \"chartClick\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", core_1.EventEmitter)\n], BaseChartDirective.prototype, \"chartHover\", void 0);\nBaseChartDirective = __decorate([\n    core_1.Directive({ selector: 'canvas[baseChart]', exportAs: 'base-chart' }),\n    __metadata(\"design:paramtypes\", [core_1.ElementRef])\n], BaseChartDirective);\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    return ChartsModule;\n}());\nChartsModule = __decorate([\n    core_1.NgModule({\n        declarations: [\n            BaseChartDirective\n        ],\n        exports: [\n            BaseChartDirective\n        ],\n        imports: []\n    })\n], ChartsModule);\nexports.ChartsModule = ChartsModule;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./charts/charts\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require(\"./index\"));\n","export default \"<div class=\\\"panel-header panel-header-sm\\\">\\n\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3 col-sm-6\\\">\\n      <div class=\\\"card card-stats\\\">\\n        <div class=\\\"card-body \\\">\\n          <div class=\\\"statistics statistics-horizontal\\\">\\n            <div class=\\\"info info-horizontal\\\">\\n              <div class=\\\"row\\\">\\n             \\n                <div class=\\\"col-7 text-right\\\">\\n                  <h3 class=\\\"info-title\\\">All</h3>\\n                  <h5 class=\\\"stats-title\\\">1058</h5>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"card-footer \\\">\\n          \\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3 col-sm-6\\\">\\n      <div class=\\\"card card-stats\\\">\\n        <div class=\\\"card-body \\\">\\n          <div class=\\\"statistics statistics-horizontal\\\">\\n            <div class=\\\"info info-horizontal\\\">\\n              <div class=\\\"row\\\">\\n           \\n                <div class=\\\"col-7 text-right\\\">\\n                  <h3 class=\\\"info-title\\\">Pending</h3>\\n                  <h5 class=\\\"stats-title\\\">1000</h5>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n    \\n        <div class=\\\"card-footer \\\">\\n        \\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3 col-sm-6\\\">\\n      <div class=\\\"card card-stats\\\">\\n        <div class=\\\"card-body \\\">\\n          <div class=\\\"statistics statistics-horizontal\\\">\\n            <div class=\\\"info info-horizontal\\\">\\n              <div class=\\\"row\\\">\\n              \\n                <div class=\\\"col-7 text-right\\\">\\n                  <h3 class=\\\"info-title text-right\\\">Completed</h3>\\n                  <h5 class=\\\"stats-title\\\">200</h5>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n       \\n        <div class=\\\"card-footer \\\">\\n          \\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-lg-3 col-sm-6\\\">\\n      <div class=\\\"card card-stats\\\">\\n        <div class=\\\"card-body \\\">\\n          <div class=\\\"statistics statistics-horizontal\\\">\\n            <div class=\\\"info info-horizontal\\\">\\n              <div class=\\\"row\\\">\\n              \\n                <div class=\\\"col-7 text-right\\\">\\n                  <h3 class=\\\"info-title\\\">Rejected</h3>\\n                  <h5 class=\\\"stats-title\\\">10</h5>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n       \\n        <div class=\\\"card-footer \\\">\\n          \\n        </div>\\n      </div>\\n    </div>\\n\\n\\n\\n   <!-- <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n         \\n          <h6 class=\\\"card-title\\\"> CW Table</h6>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"table\\\">\\n            <table class=\\\"table\\\">\\n              <thead class=\\\" text-primary\\\">\\n                <th>\\n                  ID\\n                </th>\\n                <th>\\n                  Account ID\\n                </th>\\n                <th>\\n                  Amount\\n                </th>\\n                <th >\\n                  SDC Status\\n                </th>\\n                <th >\\n                  OPD Status\\n                </th>\\n                <th >\\n                  Credit Status\\n                </th>\\n\\n                <th >\\n                  Overall Status\\n                </th>\\n         \\n                \\n               \\n              </thead>\\n              <tbody>\\n                <tr>\\n                  <td>\\n                    <a href='#/tables/ngx-datatable' >111000</a>\\n                  </td>\\n                  <td>\\n                    112-123-100251\\n                  </td>\\n                  <td>\\n                   1000$\\n                  </td>\\n                  <td >\\n                   Regular\\n                   </td>\\n                   <td >\\n                    Success\\n                   </td>\\n                   <td >\\n                    Verified\\n                   </td>\\n\\n                  <td >\\n                    Success\\n                  </td>\\n\\n                </tr>\\n\\n                <tr>\\n                  <td>\\n                    <a href='#/tables/ngx-datatable' >111000</a>\\n                  </td>\\n                  <td>\\n                    112-123-100251\\n                  </td>\\n                  <td>\\n                   1000$\\n                  </td>\\n                  <td >\\n                   Regular\\n                   </td>\\n                   <td>\\n                    Success\\n                   </td>\\n                   <td >\\n                    Verified\\n                   </td>\\n\\n                  <td >\\n                    Success\\n                  </td>\\n                 </tr>\\n\\n\\n                <tr>\\n                  <td>\\n                    <a href='#/tables/ngx-datatable' >111000</a>\\n                  </td>\\n                  <td>\\n                    112-123-100251\\n                  </td>\\n                  <td>\\n                   1000$\\n                  </td>\\n                  <td>\\n                   Regular\\n                   </td>\\n                   <td>\\n                    Success\\n                   </td>\\n                   <td>\\n                    Verified\\n                   </td>\\n\\n                  <td >\\n                    Success\\n                  </td>\\n                   </tr>\\n\\n                <tr>\\n                  <td>\\n                    <a href='#/tables/ngx-datatable' >111000</a>\\n                  </td>\\n                  <td>\\n                    112-123-100251\\n                  </td>\\n                  <td>\\n                   1000$\\n                  </td>\\n                  <td>\\n                   Regular\\n                   </td>\\n                   <td>\\n                    Success\\n                   </td>\\n                   <td>\\n                    Verified\\n                   </td>\\n\\n                  <td >\\n                    Success\\n                  </td>\\n                 </tr>\\n\\n\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div> -->\\n\\n\\n\\n    <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"card \\\">\\n        <div class=\\\"card-header \\\"><h4 class=\\\"card-title\\\">CW Data</h4></div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"toolbar\\\">\\n            <!--        Here you can write extra buttons/actions for the toolbar              -->\\n          </div>\\n\\n\\n          <div class=\\\"dataTables_wrapper\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                <div class=\\\"dataTables_length\\\" id=\\\"datatable_length\\\">\\n                  <label>\\n                    Show\\n                    <select\\n                      name=\\\"datatable_length\\\"\\n                      aria-controls=\\\"datatable\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                      (change)=\\\"entriesChange($event)\\\"\\n                    >\\n                      <option value=\\\"10\\\" [selected]=\\\"entries==10\\\">10</option>\\n                      <option value=\\\"25\\\" [selected]=\\\"entries==25\\\">25</option>\\n                      <option value=\\\"50\\\" [selected]=\\\"entries==50\\\">50</option>\\n                      <option value=\\\"-1\\\" [selected]=\\\"entries==-1\\\">All</option>\\n                    </select>\\n                    entries\\n                    </label>\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                <div id=\\\"datatable_filter\\\" class=\\\"dataTables_filter\\\">\\n                  <label>\\n                    <input\\n                      type=\\\"search\\\"\\n                      class=\\\"form-control form-control-sm\\\"\\n                      placeholder=\\\"Search records\\\"\\n                      aria-controls=\\\"datatable\\\"\\n                      (keyup)=\\\"filterTable($event)\\\"\\n                    />\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <!-- <ngx-datatable\\n            [rows]=\\\"rows\\\"\\n            [columns]=\\\"columns\\\">\\n          </ngx-datatable> -->\\n          \\n\\n            <ngx-datatable\\n                      class=\\\"bootstrap selection-cell\\\"\\n                      [columnMode]=\\\"'force'\\\"\\n                      [headerHeight]=\\\"50\\\"\\n                      [footerHeight]=\\\"50\\\"\\n                      [rowHeight]=\\\"'auto'\\\"\\n                      [limit]=\\\"entries != -1 ? entries:undefined\\\"\\n                      [rows]=\\\"temp\\\"\\n                      (activate)=\\\"onActivate($event)\\\"\\n              >\\n\\n                <!--            <ngx-datatable-column name=\\\"Id\\\" prop=\\\"$key\\\" ngx-datatable-cell-template>-->\\n                <!--              <ng-template let-row=\\\"row\\\" let-value=\\\"value\\\">-->\\n                <!--                <a (click)=\\\"editFunction(value.id)\\\">{{value.name}}</a>-->\\n                <!--                <a href=\\\"#\\\" class=\\\"btn btn-round btn-warning btn-icon btn-sm edit\\\" (click)=\\\"editFunction($event)\\\"><i class=\\\"far fa-calendar-alt\\\"></i></a>-->\\n\\n                <!--              </ng-template>-->\\n                <!--            </ngx-datatable-column>-->\\n                <ngx-datatable-column name=\\\"id\\\" prop=\\\"id\\\">\\n<!--                <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">-->\\n<!--                  <a class=\\\"btn\\\" (click)=\\\"ViewDetails(row.id)\\\">-->\\n<!--                    {{row.id}} &lt;!&ndash; or {{value}} &ndash;&gt;-->\\n<!--                  </a>-->\\n<!--                </ng-template>-->\\n              </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Accountnumber\\\">\\n              <ng-template ngx-datatable-cell-template let-row=\\\"row\\\" let-value=\\\"value\\\">\\n                <a class=\\\"btn\\\" (click)=\\\"ViewDetails(row.id)\\\">\\n                  {{row.accountnumber}} <!-- or {{value}} -->\\n                </a>\\n              </ng-template>\\n\\n            </ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Amount\\\"></ngx-datatable-column>\\n              <ngx-datatable-column name=\\\"Date\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Sdcstatus\\\"></ngx-datatable-column>\\n            <ngx-datatable-column name=\\\"Opdstatus\\\"></ngx-datatable-column>\\n<!--            <ngx-datatable-column name=\\\"Creditstatus\\\"></ngx-datatable-column>-->\\n<!--            <ngx-datatable-column name=\\\"Overallstatus\\\"></ngx-datatable-column>-->\\n\\n         \\n          <ngx-datatable-column [sortable]=\\\"false\\\" [canAutoResize]=\\\"false\\\" [draggable]=\\\"false\\\" [resizeable]=\\\"false\\\">\\n            <ng-template ngx-datatable-header-template let-value=\\\"value\\\" let-allRowsSelected=\\\"allRowsSelected\\\" let-selectFn=\\\"selectFn\\\">\\n              Actions\\n            </ng-template>\\n            <ng-template ngx-datatable-cell-template let-value=\\\"value\\\" let-isSelected=\\\"isSelected\\\" let-onCheckboxChangeFn=\\\"onCheckboxChangeFn\\\">\\n              <a href=\\\"#/tables/ngx-datatable/\\\" class=\\\"btn btn-round btn btn-info btn-icon btn-sm like\\\"><i class=\\\"fas fa-eye\\\"></i></a>\\n              <a href=\\\"#\\\" class=\\\"btn btn-round btn-warning btn-icon btn-sm edit\\\" (click)=\\\"editFunction($event)\\\"><i class=\\\"far fa-calendar-alt\\\"></i></a>\\n\\n            </ng-template>\\n        </ngx-datatable-column>\\n            </ngx-datatable>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n<!--    <div>-->\\n<!--      <ngx-datatable-->\\n<!--        [rows]=\\\"rows\\\"-->\\n<!--        [columns]=\\\"columns\\\">-->\\n<!--      </ngx-datatable>-->\\n<!--    </div>-->\\n\\n  </div>\\n\\n\\n\\n\\n</div>\\n\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport * as Chartist from \"chartist\";\nimport {ActivatedRoute, Router} from '@angular/router';\n\n\n\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"]\n})\n\n\n\nexport class DashboardComponent implements OnInit {\n\n\n  public chartClicked(e: any): void {\n    console.log(e);\n  }\n\n  public chartHovered(e: any): void {\n    console.log(e);\n  }\n  public hexToRGB(hex, alpha) {\n    var r = parseInt(hex.slice(1, 3), 16),\n      g = parseInt(hex.slice(3, 5), 16),\n      b = parseInt(hex.slice(5, 7), 16);\n\n    if (alpha) {\n      return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\n    } else {\n      return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n    }\n  }\n\n  test: any =  `<button (click)=\"onSelect($event)\">Click me</button>`;\n  entries: number = 10;\n  selected: any[] = [];\n  temp = [];\n  activeRow: any;\n  rows = [\n    {\n      id: 1,\n      accountid: \"4534534\",\n      accountnumber: \"112-123-100445\",\n      accountname: \"Croline chao\",\n      clientcode: \"15737701612379002\",\n      amount: \"103\",\n      date: \"07/28/2020\",\n      sdcstatus: \"Regular\",\n      opdstatus: \"Success\",\n      creditstatus: \"Success\",\n      overallstatus: \"Success\"\n    },\n    {\n      id: 2,\n      accountid: \"7675756\",\n      accountnumber: \"112-123-79888\",\n      accountname: \"Jimmy stood\",\n      clientcode: \"445656546212342\",\n      amount: \"7676\",\n      date: \"07/28/2020\",\n      sdcstatus: \"Regular\",\n      opdstatus: \"Success\",\n      creditstatus: \"Success\",\n      overallstatus: \"Success\"\n    },\n    {\n      id: 3,\n      accountid: \"3423423\",\n      accountnumber: \"112-123-12321\",\n      clientcode: \"855756756767676\",\n      accountname: \"Fidds catas\",\n      amount: \"6565\",\n      date: \"07/28/2020\",\n      sdcstatus: \"Regular\",\n      opdstatus: \"Success\",\n      creditstatus: \"Success\",\n      overallstatus: \"Success\"\n    },\n\n\n    {\n      id: 4,\n      accountid: \"2343243\",\n      accountnumber: \"112-123-80797\",\n      clientcode: \"34532646456454754\",\n      accountname: \"Nicolas fredd\",\n      amount: \"656\",\n      date: \"07/28/2020\",\n      sdcstatus: \"iRegular\",\n      opdstatus: \"Success\",\n      creditstatus: \"Success\",\n      overallstatus: \"Success\"\n    }\n  ];\n\n\n  // rows = [\n  //   { name: 'Austin', gender: 'Male', company: 'Swimlane' },\n  //   { name: 'Dany', gender: 'Male', company: 'KFC' },\n  //   { name: 'Molly', gender: 'Female', company: 'Burger King' },\n  // ];\n  // columns = [\n  //   { prop: 'name' },\n  //   { name: 'Gender' },\n  //   { name: 'Company' }\n  // ];\n\n\n  constructor(private route:ActivatedRoute,private router:Router) {\n\n    this.temp = this.rows.map((prop,key)=>{\n      return {\n        ...prop,\n        id: key\n      };\n\n    });\n\n  }\n\n  entriesChange($event){\n    this.entries = $event.target.value;\n  }\n  filterTable($event) {\n    let val = $event.target.value;\n    this.temp = this.rows.filter(function(d) {\n\n      for(var key in d){\n        if(d[key].toLowerCase().indexOf(val) !== -1){\n          return true;\n        }\n      }\n      return false;\n    });\n  }\n  onSelect($event) {\n   console.log('Select Event', $event);\n }\n onActivate(event) {\n    this.activeRow = event.row;\n  }\n  likeFunction($event){\n    $event.preventDefault();\n    let details = \"You've clicked LIKE button on \\n{\\n\";\n    for(var key in this.activeRow){\n      details += key + \": \" + this.activeRow[key] + \"\\n\";\n    }\n    details += \"}.\";\n    alert(details);\n  }\n  editFunction($event){\n    $event.preventDefault();\n    let details = \"You've clicked EDIT button on \\n{\\n\";\n    for(var key in this.activeRow){\n      details += key + \": \" + this.activeRow[key] + \"\\n\";\n    }\n    details += \"}.\";\n    alert(details);\n  }\n  deleteFunction($event){\n    $event.preventDefault();\n    this.temp = this.rows.filter(entry => entry.id !== this.activeRow.id);\n  }\n  ViewDetails(id){\n    this.router.navigate(['/tables/ngx-datatable'], { queryParams: { id: id } });\n  }\n\n  ngOnInit() {\n\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\nimport { CommonModule } from \"@angular/common\";\nimport { ChartsModule } from \"ng2-charts/ng2-charts\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ComponentsModule } from \"../../components/components.module\";\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { DashboardRoutes } from \"./dashboard.routing\";\n\nimport { DashboardComponent } from \"./dashboard.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgbModule,\n    NgxDatatableModule,\n    RouterModule.forChild(DashboardRoutes),\n    ComponentsModule,\n    ChartsModule\n  ],\n  declarations: [DashboardComponent],\n  exports: [DashboardComponent]\n})\nexport class DashboardModule {}\n","import { Routes } from \"@angular/router\";\n\nimport { DashboardComponent } from \"./dashboard.component\";\n\nexport const DashboardRoutes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"dashboard\",\n        component: DashboardComponent\n      }\n    ]\n  }\n];\n"],"sourceRoot":"webpack:///"}